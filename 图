#include "stdio.h"
#define  MaxVertexNum 20     //¶¨ÒåÍ¼µÄ×î´ó¶¥µãÊý
#define  MaxEdgeNum  50      //¶¨ÒåÍ¼µÄ×î´ó±ßÊý
#define  MaxValue  1000      //¶¨ÒåMaxValueÎªÈ«¾ÖÕûÐÍ³£Á¿£¬×÷ÎªÎÞÇî´ó
typedef  int  VertexType;    //¶¨ÒåÍ¼ÖÐ¶¥µãÊý¾ÝµÄÀàÐÍVertexTypeÎªÕûÐÍ
typedef  VertexType  vexlist[MaxVertexNum];  //Îª´æ´¢¶¥µãÐÅÏ¢µÄÊý×éÀàÐÍ
typedef  int adjmatrix[MaxVertexNum][MaxVertexNum]; //Îª´æ´¢ÁÚ½Ó¾ØÕóµÄÊý×éÀàÐÍ
int n;    //Êµ¼ÊµÄ¶¥µã¸öÊý
int e;    //Êµ¼ÊµÄ±ß¸öÊý
int visited [ MaxVertexNum ];  //È«¾ÖÊý×é±ê¼ÇÖÃ1±íÊ¾ÒÑ¾­·ÃÎÊ£¬0ÎªÎ´·ÃÎÊ
/* ½¨Á¢Í¼µÄÁÚ½Ó¾ØÕó
Í¨¹ý´Ó¼üÅÌÉÏÊäÈën¸ö¶¥µãÐÅÏ¢ºÍeÌõÎÞÏò´øÈ¨±ßµÄÐÅÏ¢£¬½¨Á¢ÁÚ½Ó¾ØÕóGA*/
void  Create(vexlist GV,adjmatrix GA,int n,int e)
{
	int  i , j, k, w;           
    printf ("\n  ÇëÊäÈë %d ¸ö¶¥µãÊý¾Ý", n);         //½¨Á¢¶¥µãÊý×é
    for (i=1;  i<=n;  i++)	 GV[i]=i; 
	for (i=1;  i<=n;  i++)          /*³õÊ¼»¯ÁÚ½Ó¾ØÕóÊý×é*/
	for (j=1;  j<=n;  j++)  
		GA[ i ][ j ]=MaxValue;
	printf ("ÊäÈë %d ÌõÎÞÏò´øÈ¨±ß\n", e);     /*½¨Á¢ÁÚ½Ó¾ØÕóÊý×é*/
	for (k=1; k<=e;  k++) 
	{
		printf("ÊäÈëµÚ %d Ìõ±ßµÄÁ½¶ËÐòºÅ¼°È¨Öµ(i j W): ",k); 
		scanf ("%d%d%d", &i, &j, &w);  
		GA[i][j]=GA[j][i]=w;   //ÖÃÊý×éÖÐÏàÓ¦¶Ô³ÆÔªËØµÄÖµÎªw
	}
}

//ÁÚ½Ó¾ØÕóµÄÉî¶È±éÀú
void dfs(vexlist GV,adjmatrix GA,int i)   // ´Ó¶¥µãi³ö·¢µÄÉî¶È±éÀú
{   int j;
    printf("%d,",GV[i]);                      //Êä³ö·ÃÎÊ¶¥µã
    visited[i]=1;                 //È«¾ÖÊý×é·ÃÎÊ±ê¼ÇÖÃ1±íÊ¾ÒÑ¾­·ÃÎÊ
    for(j=1; j<=n; j++)
       if ((GA[i][j]!=MaxValue)&&(!visited[j]))
	dfs(GV,GA,j);
}

//ÁÚ½Ó¾ØÕóµÄ¹ã¶È±éÀú
void  bfs(vexlist GV,adjmatrix GA,int  i)  //´Ó¶¥µãi³ö·¢¹ã¶È±éÀú
{   int  q[MaxVertexNum] ;                //QÎª¶ÓÁÐ
    int  f,r,j ;                 // f,r·Ö±ðÎª¶ÓÁÐÍ·£¬Î²Ö¸Õë
    f=r=0 ;                      //ÉèÖÃ¿Õ¶ÓÁÐ
    printf("%d,",GV[i]);                // Êä³ö·ÃÎÊ¶¥µã
    visited[i]=1;                //È«¾ÖÊý×é±ê¼ÇÖÃ1±íÊ¾ÒÑ¾­·ÃÎÊ
    r++; q[r]=i ;                         //Èë¶ÓÁÐ
    while (f<r)
    {	f++; i=q[f] ;                     //³ö¶ÓÁÐ
		for (j=1; j<=n; j++)
		if ((GA[i][j]!=MaxValue)&&(!visited[j]))
  		{	printf("%d,",GV[j]);
			visited[j]=1 ; 
			r++; q[r]=j;
		}  
     }   
}

void print(adjmatrix GA)
{
	
  int i,j;
  for(i=1;i<=n;i++){
   
	  
	  for(j=1;j<=n;j++){



  printf("%d",GA[i][j]);
  }

  }


}

void main()
{
	vexlist GV;
	adjmatrix GA;
	int i,k;
	do 
	{
	printf("\n\n\n\n");
	printf("\t\t      Í¼µÄÁÚ½Ó¾ØÕó×ÓÏµÍ³\n");
	printf("\t\t*****************************\n");
	printf("\t\t*       1----¸ü ÐÂ Í¼¡¡ ¡¡  *\n");
	printf("\t\t*       2----Éî¶È±éÀú¡¡¡¡¡¡ *\n");
	printf("\t\t*       3----¹ã¶È±éÀú¡¡¡¡¡¡ *\n");
	printf("\t\t*       0----·µ¡¡¡¡»Ø¡¡¡¡ ¡¡*\n");
	printf("\t\t*****************************\n");
	printf("\t\t   ÇëÑ¡Ôñ²Ëµ¥Ïî(0£­3)£º");
	scanf("%d",&k);
	switch(k)
	{
		case 1:
			printf ("\nÇëÊäÈëÍ¼µÄ¶¥µãµÄ¸öÊýn= ");
			 scanf("%d",&n);
			printf ("ÇëÊäÈëÍ¼µÄ±ß¸öÊýe= ");
			 scanf("%d",&e);
		      Create(GV,GA,n,e) ;	
			printf("Í¼µÄÁÚ½Ó¾ØÕóÈçÏÂ\n");
			print(GA);
			break;
		case 2:
			for (i=0; i< MaxVertexNum;  i++)       /*±êÖ¾ÏòÁ¿³õÊ¼»¯*/
			visited [i]=0; 
			printf ("\nÇëÊäÈë´ÓÍ¼µÄÄÄ¸ö¶¥µã(1-%d)¿ªÊ¼Éî¶È±éÀú:",n);
			 scanf("%d",&i);                          
			printf("Éî¶È±éÀúµÄ½á¹ûÎª£º");
			  dfs(GV,GA,i);                       
			break;
		case 3:
			for (i=0; i< MaxVertexNum;  i++)       /*±êÖ¾ÏòÁ¿³õÊ¼»¯*/
			   	visited [i]=0; 
			printf ("\nÇëÊäÈë´ÓÍ¼µÄÄÄ¸ö¶¥µã(1-%d)¿ªÊ¼¹ã¶È±éÀú:",n);
			    scanf("%d",&i);                        
			printf("¹ã¶È±éÀúµÄ½á¹ûÎª£º");
			     bfs(GV,GA,i);                       
			break;
	} 	
	}while (k!=0);
}
