#include  "iostream.h"
#include  "stdio.h"
#include  "stdlib.h"
#include  "iomanip.h"
#include  "time.h"
const   int  N=100000;
#define  ElemType  int
void insertsort(ElemType R[],int n)      //直接插入排序
{  for ( int i=1; i<n; i++)        //i表示插入次数，共进行n-1次插入
   { ElemType temp=R[i];        //把待排序元素赋给temp
    int j=i-1; 
    while ((j>=0)&& (temp<R[j]))
 {      R[j+1]=R[j]; j--; }              // 顺序比较和移动
        R[j+1]=temp;}
}

void BinaryInsertSort(ElemType R[],int n)    //二分插入排序
{   for(int i=1; i<n; i++)                      //共进行n-1次插入
  { int left=0,right=i-1;ElemType temp=R[i];
    while(left<=right)
    {  int middle=(left+right)/2;             //取中点       
       if(temp<R[middle]) right=middle-1;    //取左区间
       else   left=middle+1; }               //取右区间
     for(int j=i-1;j>=left;j--)	 
R[j+1]=R[j];    //元素后移空出插入位
	  R[left]=temp;  }
}

void Bubblesort(ElemType R[],int n)          //冒泡排序
{  int flag=1;  //当flag为0则停止排序
  for  (int i=1; i<n; i++)                //i表示趟数，最多n-1趟
  {
    flag=0;                               //开始时元素未交换
    for (int j=n-1; j>=i; j--)  
      if (R[j]<R[j-1])                      //发生逆序	  
       {  ElemType t=R[j];
	  R[j]=R[j-1];
	  R[j-1]=t;flag=1; }                    //交换，并标记发生了交换
          if (flag==0)  return;      }
}   
 
void   selectsort(ElemType R[],int n)      //直接选择排序
{  int  i,j,m;
   ElemType t;
   for ( i=0;i<n-1; i++ )
   {   m=i ;
       for ( j=i+1;j<n;j++ )
         if  ( R[j]<R[m] )  m=j  ;
       if ( m!=i )  { t=R[i] ; R[i]=R[m] ; R[m]=t ;  }
    }
}
 
void   shellsort(ElemType R[],int n)    //希尔排序
{
	int k;
	for(k=n/2;k>0;k--){
		for(int i=0;i<k;i++){
			for(int j=i+k;j<n;j=j+k){ 
				if(R[j]<R[j-k]){
					int temp=R[j];
					int m=j-k;
					while(m>=0 && R[k]>temp){
						R[m+k]=R[m];
						m=m-k;
					}
					R[m+k]=temp;
				}
			}
		}
	}
}
 
void print(ElemType R[],int n)            //打印数组
{
   for(int i=0;i<n;i++)
   {  if (i%10==0)  printf("\n");
      printf("%7d",R[i]);
   }
   printf("\n");
}
void main()
{   int sele;
    ElemType R[N],T[N];
    int n,k;
    long  t1,t2;
    double  tt;
    srand(1);
    for(int i=0;i<N;i++)  T[i]=rand();     //产生10000个随机数
    print(T,N);
	printf("\n\n\n\n");
	printf("\t\t       排序 子系统\n");
	printf("\t\t*****************************\n");
	printf("\t\t*     1----直接插入排序　   *\n");
	printf("\t\t*     2----二分插入排序　　 *\n");
	printf("\t\t*     3----冒 泡 排 序 　　 *\n");
	printf("\t\t*     4----直接选择排序　　 *\n");
	printf("\t\t*     5----希 尔 排 序　 　 *\n");
	printf("\t\t*     0----返　　回　　   　*\n");
	printf("\t\t*****************************\n");
    do 
    {  		
		printf("\t\t   请选择菜单项(0－4)：");
		scanf("%d",&k);
	   	for(int i=0;i<N;i++)  R[i]=T[i];
        t1=time(NULL); 
        switch(k)
		{	case 1:
			insertsort(R,N);
			t2=time(NULL);tt=difftime(t2,t1);
			cout<<"直接插入排序的时间是：";
            cout<<tt<<endl;
	        break;
		case 2:
			BinaryInsertSort(R,N);
			t2=time(NULL);tt=difftime(t2,t1);
 			cout<<"二分插入排序的时间为："<<tt<<endl;break;
		case 3:
			Bubblesort(R,N);
			t2=time(NULL);tt=difftime(t2,t1);
 			cout<<"冒泡排序的时间为："<<tt<<endl;break;
		case 4:
			selectsort(R,N);
			t2=time(NULL);tt=difftime(t2,t1);
 			cout<<"直接选择排序的时间为："<<tt<<endl;break;
        case 5:
			shellsort(R,N);
			t2=time(NULL);tt=difftime(t2,t1);
 			cout<<"希尔排序的时间为："<<tt<<endl;
       }
	}while(k);

}
